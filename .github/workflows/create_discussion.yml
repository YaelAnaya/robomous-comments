name: Manage Discussions for Post Events

on:
  repository_dispatch:
    types: [manage_discussion]

jobs:
  manage-discussions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Condici贸n para crear una discusi贸n
      - name: Create Discussion
        if: ${{ github.event.client_payload.operation == 'create' }}
        id: create-discussion
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          response=$(curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                "query": "mutation ($repoId: ID!, $categoryId: ID!, $title: String!, $body: String!) {
                  createDiscussion(input: {
                    repositoryId: $repoId,
                    categoryId: $categoryId,
                    title: $title,
                    body: $body
                  }) {
                    discussion {
                      id
                    }
                  }
                }",
                "variables": {
                  "repoId": ${{ secrets.REPOSITORY_ID }},
                  "categoryId": ${{ secrets.CATEGORY_ID }},
                  "title": ${{ github.event.client_payload.slug }},
                  "body": "Post at: (https://robomous.ai/blog/${{ github.event.client_payload.slug }})"
                }
              }' \
              https://api.github.com/graphql)

            discussionId=$(echo $response | jq -r '.data.createDiscussion.discussion.id')

            echo "discussion_id=$discussionId" >> $GITHUB_ENV

      # Agregar el discussionId al documento de Sanity
      - name: Update Sanity with Discussion ID
        if: ${{ github.event.client_payload.operation == 'create' }}
        env:
          SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
          SANITY_DATASET: ${{ secrets.SANITY_DATASET }}
          SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $SANITY_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "mutations": [
                {
                  "patch": {
                    "id": "'"${{ github.event.client_payload._id }}"'",
                    "set": {
                      "discussionId": "'"$discussion_id"'",
                    }
                  }
                }
              ]
            }' \
            https://$SANITY_PROJECT_ID.api.sanity.io/v1/data/mutate/$SANITY_DATASET

      # Condici贸n para eliminar una discusi贸n
      - name: Delete Discussion
        if: ${{ github.event.client_payload.operation == 'delete' && github.event.client_payload.discussionId != null }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation ($discussionId: ID!) {
                deleteDiscussion(input: { id: $discussionId }) {
                  clientMutationId
                }
              }",
              "variables": {
                "discussionId": "'"${{ github.event.client_payload.discussionId }}"'"
              }
            }' \
            https://api.github.com/graphql
